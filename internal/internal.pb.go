// Code generated by protoc-gen-gogo.
// source: internal/internal.proto
// DO NOT EDIT!

/*
Package internal is a generated protocol buffer package.

It is generated from these files:
	internal/internal.proto

It has these top-level messages:
	Burger
*/
package internal

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.GoGoProtoPackageIsVersion1

type Burger struct {
	ID               *int64 `protobuf:"varint,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	Price            *int64 `protobuf:"varint,2,opt,name=Price,json=price" json:"Price,omitempty"`
	Calories         *int64 `protobuf:"varint,3,opt,name=Calories,json=calories" json:"Calories,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Burger) Reset()                    { *m = Burger{} }
func (m *Burger) String() string            { return proto.CompactTextString(m) }
func (*Burger) ProtoMessage()               {}
func (*Burger) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{0} }

func (m *Burger) GetID() int64 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

func (m *Burger) GetPrice() int64 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *Burger) GetCalories() int64 {
	if m != nil && m.Calories != nil {
		return *m.Calories
	}
	return 0
}

func init() {
	proto.RegisterType((*Burger)(nil), "internal.Burger")
}

var fileDescriptorInternal = []byte{
	// 109 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0xcf, 0xcc, 0x2b, 0x49,
	0x2d, 0xca, 0x4b, 0xcc, 0xd1, 0x87, 0x31, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x38, 0x60,
	0x7c, 0x25, 0x2f, 0x2e, 0x36, 0xa7, 0xd2, 0xa2, 0xf4, 0xd4, 0x22, 0x21, 0x3e, 0x2e, 0x26, 0x4f,
	0x17, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0xa6, 0x4c, 0x17, 0x21, 0x11, 0x2e, 0xd6, 0x80,
	0xa2, 0xcc, 0xe4, 0x54, 0x09, 0x26, 0xb0, 0x10, 0x6b, 0x01, 0x88, 0x23, 0x24, 0xc5, 0xc5, 0xe1,
	0x9c, 0x98, 0x93, 0x5f, 0x94, 0x99, 0x5a, 0x2c, 0xc1, 0x0c, 0x96, 0xe0, 0x48, 0x86, 0xf2, 0x01,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x63, 0xf0, 0xa7, 0x9d, 0x6f, 0x00, 0x00, 0x00,
}
